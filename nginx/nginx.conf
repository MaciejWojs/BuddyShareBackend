user root;
worker_processes 1;

# Dodanie dyrektywy env dla zmiennych środowiskowych
env HOST;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    server {
        listen 80;
        server_name localhost;

        # Dodanie endpointu debug do sprawdzania zawartości katalogów
        location /debug/ {
            alias /tmp/;
            autoindex on;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        # Strumieniowanie HLS - główny strumień
        location /hls/ {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            alias /tmp/hls/;  # Użyj alias do wskazania katalogu HLS
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;  # Aby umożliwić dostęp z różnych źródeł
            expires -1;
        }

        # Strumieniowanie HLS - strumienie transkodowane
        location /hls/transcode/ {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            # Wskazanie na katalog ze strumieniami transkodowanymi
            alias /tmp/hls/transcode/;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
            expires -1;
        }

        # Strumieniowanie DASH - główny strumień
        location /dash/ {
            types {
                application/dash+xml mpd;
                video/mp4 mp4;
                audio/mp4 m4a;
                application/octet-stream m4s;
            }
            alias /tmp/dash/;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
            expires -1;
        }
        
        location /dash/test/ {
            types {
                application/dash+xml mpd;
                video/mp4 mp4;
                audio/mp4 m4a;
                application/octet-stream m4s;
            }
            alias /tmp/transcode/;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
            expires -1;
        }

        # # Strumieniowanie DASH - strumienie transkodowane
        # location /dash/transcode/ {
        #     types {
        #         application/dash+xml mpd;
        #         video/mp4 mp4;
        #         audio/mp4 m4a;
        #         application/octet-stream m4s;
        #     }
        #     alias /tmp/dash/transcode/;
        #     add_header Cache-Control no-cache;
        #     add_header Access-Control-Allow-Origin *;
        #     expires -1;
        # }
    }

    server {
        listen 8080;
        
        # Statystyki RTMP - lista aktywnych streamów
        location /api/streams {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
            rtmp_stat_format json;
            add_header Access-Control-Allow-Origin *;
            add_header Content-Type application/json;
        }
        
        # Kontrola streamów RTMP
        location /api/control {
            rtmp_control all;
            add_header Access-Control-Allow-Origin *;
        }
        
        # Kontrola DASH live streamów
        location /api/dash/control {
            rtmp_control all;
            # Specyficzne komendy dla DASH
            # Przykładowe działania: record/stop dla DASH
            add_header Access-Control-Allow-Origin *;
        }
        
        # Status DASH streamów
        location /api/dash/status {
            alias /tmp/dash/;
            autoindex on;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
            add_header Content-Type application/json;
        }
    }
}

# Konfiguracja RTMP dla Nginx
rtmp {
    server {
        listen 1935;
        chunk_size 4096;

        application test {
            live on;
            record off;

            #DASH
            dash on;
            dash_path /tmp/transcode/;
            dash_fragment 3;
            dash_playlist_length 10;
        }   

        # Nazwa streamu
        application live {
            live on;
            record off;

            notify_method get;
            # notify_method post;
            on_publish http://${HOST}:5000/streams/notify/start;
            on_publish_done http://${HOST}:5000/streams/notify/end;
            
            # Konwersja RTMP do HLS
            # hls on;
            # hls_path /tmp/hls;
            # hls_fragment 3;
            # hls_playlist_length 60;
            
            # Konwersja RTMP do DASH LL
            dash on;
            dash_path /tmp/dash;
            dash_fragment 3;
            dash_playlist_length 120;

           # Ekstraktuj bazową nazwę streamu bez przyrostka jakości (_360p, _480p, _720p)
           exec_publish_done sh -c 'STREAM_NAME=$(echo "$name" | sed -E "s/_(360p|480p|720p)$//g"); echo "Ekstrahowana nazwa streamu: $STREAM_NAME" >> /tmp/stream_debug.log';
           
           # Używamy pełnej nazwy streamu bez przyrostków jakości
        #    exec ffmpeg -i http://127.0.0.1/dash/${DOLLAR}name.mpd -c:v libx264 -preset faster -b:v 1000k -vf "scale=1280:720" -c:a aac -map 0:v:0 -map 0:a:0 -f flv rtmp://127.0.0.1:1935/test/${DOLLAR}name_720p;
        #    exec ffmpeg -i http://127.0.0.1/dash/${DOLLAR}name.mpd -c:v libx264 -preset faster -b:v 500k -vf "scale=854:480" -c:a aac -map 0:v:0 -map 0:a:0 -f flv rtmp://127.0.0.1:1935/test/${DOLLAR}name_480p;
        #    exec ffmpeg -i http://127.0.0.1/dash/${DOLLAR}name.mpd -c:v libx264 -preset faster -b:v 300k -vf "scale=640:360" -c:a aac -map 0:v:0 -map 0:a:0 -f flv rtmp://127.0.0.1:1935/test/${DOLLAR}name_360p;

            exec ffmpeg  -threads 0 -i http://127.0.0.1/dash/${DOLLAR}name.mpd -filter_complex "[0:v]split=3[v720][v480][v360];[0:a]asplit=3[a720][a480][a360];[v720]scale=1280:720[v720out];[v480]scale=854:480[v480out];[v360]scale=640:360[v360out]" -map "[v720out]" -map "[a720]" -c:v libx264 -preset superfast -tune zerolatency  -b:v 1000k -maxrate 1000k -bufsize 2000k -c:a aac -ar 44100 -b:a 128k -f flv rtmp://127.0.0.1:1935/test/${DOLLAR}name_720p -map "[v480out]" -map "[a480]" -c:v libx264 -preset superfast -tune zerolatency -b:v 500k  -maxrate 500k  -bufsize 1000k  -c:a aac -ar 44100 -b:a 96k -f flv rtmp://127.0.0.1:1935/test/${DOLLAR}name_480p -map "[v360out]" -map "[a360]" -c:v libx264 -preset superfast -tune zerolatency  -b:v 300k  -maxrate 300k  -bufsize 600k -c:a aac -ar 44100 -b:a 64k -f flv rtmp://127.0.0.1:1935/test/${DOLLAR}name_360p ;
            
            # Logowanie rozpoczęcia strumienia dla diagnostyki
            exec_publish echo "Strumień $name rozpoczęty w aplikacji live na $(date)" >> /tmp/stream_start.log;
            
            # Upewnij się że katalogi istnieją przy każdym publikowaniu
            # exec_static mkdir -p /tmp/hls/transcode /tmp/dash/transcode;
            # exec_static chmod -R 777 /tmp/hls /tmp/dash;

            # Konfiguracja zgodna z implementacją w streamController.ts
            # Użyj zmiennej $name jako identyfikatora strumienia
        }
    }
}