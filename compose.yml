services:
  db:
    image: postgres:alpine
    container_name: postgres-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - backend
    volumes:
      - postgres_data:/var/lib/postgresql/data

  app:
    image: buddy-share-back:latest
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - db
    command: [ "bun", "run", "container" ]
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      SALT: ${SALT}
      PEPPER: ${PEPPER}
      FRONT_PORT: ${FRONT_PORT}
      FRONT_HOST: ${FRONT_HOST}
      PORT: ${PORT}
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      COOKIE_SECRET: ${COOKIE_SECRET}
      NGINX_HOST: nginx
      DC_WEBHOOK_URL: ${DC_WEBHOOK_URL}
      DEVELOPMENT: ${DEVELOPMENT} # true or false
    volumes:
      - ./media:/app/media
    ports:
      - "5000:5000"
      # - "1935:1935"
      - "8000:8000"
    networks:
      - backend
    develop:
      watch:
        - action: rebuild
          path: ./package.json
        - action: rebuild
          path: ./bun.lock
        - action: rebuild
          path: ./prisma/
        - action: sync
          path: ./src/
          target: /app/src/
        - action: sync
          path: ./public/
          target: /app/public/
          ignore:
            - node_modules/
        - action: rebuild
          path: ./.env

  nginx:
    image: nginx-rtmp
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx-rtmp
    restart: unless-stopped
    depends_on:
      - app
    environment:
      HOST: app
    ports:
      - "1935:1935"
      - "8080:8080"
      - "80:80"
    networks:
      - backend
    develop:
      watch:
        - action: rebuild
          path: ./nginx/Dockerfile
        - action: sync+restart
          path: ./nginx/nginx.conf
          target: /etc/nginx/nginx.conf.template

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
